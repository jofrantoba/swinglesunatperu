/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelFormato319.java
 *
 * Created on 12-dic-2011, 16:56:55
 */
package com.contab.view;

import com.contab.bean.BeanEmpresa;
import com.contab.combobox.ComboModelEmpresas;
import com.contab.datasource.DataSourceFormato319;
import com.contab.logic.LogicEmpresa;
import com.contab.logic.LogicFormato319;
import com.contab.util.Exportar;
import com.contab.util.JFileChooserModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.sql.SQLException;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.sf.jasperreports.engine.JRParameter;
import org.openide.util.Exceptions;

/**
 *
 * @author cixtic03
 */
public class PanelFormato319 extends javax.swing.JPanel {

    private ComboModelEmpresas modelempresa = new ComboModelEmpresas();
    FrmPanel panelexportacion = new FrmPanel(ViewLogin.picture.getIconFormato319(), "Formato 3.19");
    private JFileChooserModel fileChooser = new JFileChooserModel();
    FileNameExtensionFilter filterDOC = new FileNameExtensionFilter("docx", "docx");
    FileNameExtensionFilter filterXLS = new FileNameExtensionFilter("xlsx", "xlsx");

    /** Creates new form PanelFormato319 */
    public PanelFormato319() throws SQLException {
        panelexportacion.getWord().setIcon(ViewLogin.picture.getIconword32());
        panelexportacion.getWord().setToolTipText("Generar Formato 3.19");

        panelexportacion.getNuevo().setIcon(ViewLogin.picture.getIconExcel());
        panelexportacion.getNuevo().setToolTipText("Generar Formato 3.19");

        panelexportacion.getPanelData().setVisible(false);
        initComponents();
        modelempresa.setData(LogicEmpresa.listaDeEmpresa());
        cmbempresa.setModel(modelempresa);
        panelexportacion.getPanelFormulario().add(this);
        panelexportacion.getWord().addActionListener(actionListener);
        panelexportacion.getNuevo().addActionListener(actionListener);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbempresa = new javax.swing.JComboBox();
        txtano = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbmes = new javax.swing.JComboBox();

        jLabel1.setText(org.openide.util.NbBundle.getMessage(PanelFormato319.class, "PanelFormato319.jLabel1.text")); // NOI18N

        txtano.setText(org.openide.util.NbBundle.getMessage(PanelFormato319.class, "PanelFormato319.txtano.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(PanelFormato319.class, "PanelFormato319.jLabel2.text")); // NOI18N

        jLabel3.setText(org.openide.util.NbBundle.getMessage(PanelFormato319.class, "PanelFormato319.jLabel3.text")); // NOI18N

        cmbmes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(cmbempresa, 0, 176, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbmes, 0, 177, Short.MAX_VALUE)
                            .addComponent(txtano, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbempresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbmes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbempresa;
    private javax.swing.JComboBox cmbmes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtano;
    // End of variables declaration//GEN-END:variables

    private File seleccionarArchivo(FileNameExtensionFilter tipoFiltro, String nombreLibro, String tipoExportacion) {
        fileChooser.setFileFilter(tipoFiltro);
        Date hoy = new Date();
        File archivo = new File(nombreLibro + hoy.getTime() + "." + tipoExportacion);
        fileChooser.setSelectedFile(archivo);
        int result = fileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            return fileChooser.getSelectedFile();
        } else {
            JOptionPane.showMessageDialog(null, "No seleccionó ningún fichero", "Diálogo cerrado o cancelado", JOptionPane.INFORMATION_MESSAGE);
            return null;
        }
    }

    private void exportarFormato319AWord(File ruta) throws SQLException {
        BeanEmpresa objEmpresa = ((ComboModelEmpresas) (cmbempresa.getModel())).getElement(cmbempresa.getSelectedIndex());
        int ano = Integer.parseInt(txtano.getText());
        int num_mes = cmbmes.getSelectedIndex() + 1;
        Map parameters = new HashMap();
        //ClassFecha xmes = new ClassFecha();
        DataSourceFormato319 ds = LogicFormato319.Formato319(ano, num_mes, objEmpresa.getCodigo());
        try {
            if (ruta != null) {

                parameters.put("empresa", objEmpresa.getDescripcion());
                parameters.put("ano", txtano.getText());
                parameters.put("ruc", objEmpresa.getRuc());
                //Locale loc = new Locale("en", "US");
                parameters.put(JRParameter.REPORT_LOCALE, Locale.US);

                String rutaFormato319 = "/com/contab/report/formato319.jasper";
                Exportar ex = new Exportar(ruta, parameters, "docx", ds, rutaFormato319);
                ViewApplication.mensajeEstado.setText(null);
                ViewApplication.mensajeEstado.setText("FORMATO FORMATO 3.19 EXPORTADO SATISFACTORIAMENTE!!");
                ex.show();
                  JOptionPane.showMessageDialog(null, "REPORTE Formato 3.19 ", "ALERT", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            Exceptions.printStackTrace(ex);
            System.out.println("El error se debe al convertir el numero del mes seleccionado al formato de la tabla consultada!!:" + ex.getMessage());
        }
    }

    private void exportarFormato319AExcel(File ruta) throws SQLException {
        BeanEmpresa objEmpresa = ((ComboModelEmpresas) (cmbempresa.getModel())).getElement(cmbempresa.getSelectedIndex());
        int ano = Integer.parseInt(txtano.getText());
        int num_mes = cmbmes.getSelectedIndex() + 1;
        Map parameters = new HashMap();
        //ClassFecha xmes = new ClassFecha();
        DataSourceFormato319 ds = LogicFormato319.Formato319(ano, num_mes, objEmpresa.getCodigo());
        try {
            if (ruta != null) {

                parameters.put("empresa", objEmpresa.getDescripcion());
                parameters.put("ano", txtano.getText());
                parameters.put("ruc", objEmpresa.getRuc());
                //Locale loc = new Locale("en", "US");
                parameters.put(JRParameter.REPORT_LOCALE, Locale.US);

                String rutaFormato319 = "/com/contab/report/formato319.jasper";
                Exportar ex = new Exportar(ruta, parameters, "xlsx", ds, rutaFormato319);
                ViewApplication.mensajeEstado.setText(null);
                ViewApplication.mensajeEstado.setText("FORMATO FORMATO 3.19 EXPORTADO SATISFACTORIAMENTE!!");
                ex.show();
            }
        } catch (Exception ex) {
            Exceptions.printStackTrace(ex);
            System.out.println("El error se debe al convertir el numero del mes seleccionado al formato de la tabla consultada!!:" + ex.getMessage());
        }
    }

    class WorkerFormato319Word extends SwingWorker<Boolean, Integer> {

        public WorkerFormato319Word() {
        }

        @Override
        protected Boolean doInBackground() {
            try {
                File ruta = seleccionarArchivo(filterDOC, "Formato3-19", "docx");
                exportarFormato319AWord(ruta);
                return true;
            } catch (SQLException ex) {
                System.err.println(ex.getCause());
                return false;
            }
        }
    }

    class WorkerFormato319Excel extends SwingWorker<Boolean, Integer> {

        public WorkerFormato319Excel() {
        }

        @Override
        protected Boolean doInBackground() {
            try {
                File ruta = seleccionarArchivo(filterXLS, "Formato3-19", "xlsx");
                exportarFormato319AExcel(ruta);
                return true;
            } catch (SQLException ex) {
                System.err.println(ex.getCause());
                return false;
            }
        }
    }
    ActionListener actionListener = new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            if (e.getSource() == panelexportacion.getWord()) {
                WorkerFormato319Word doc = new WorkerFormato319Word();
                doc.execute();
            } else if (e.getSource() == panelexportacion.getEliminar()) {
                //WorkerCuenta19PDF pdf = new WorkerCuenta19PDF();
                //pdf.execute();
            } else if (e.getSource() == panelexportacion.getNuevo()) {
                WorkerFormato319Excel excel = new WorkerFormato319Excel();
                excel.execute();
            }
        }
    };

    public FrmPanel getPanelFormato319() {
        return panelexportacion;
    }
}
